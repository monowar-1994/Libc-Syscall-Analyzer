; ModuleID = 'src/ctype/towctrans.c'
source_filename = "src/ctype/towctrans.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.__locale_struct = type opaque

@casemap.mt = internal unnamed_addr constant [3 x i32] [i32 2048, i32 342, i32 57], align 4
@rules = internal unnamed_addr constant [240 x i32] [i32 0, i32 8193, i32 -8192, i32 1949440, i32 190208, i32 30976, i32 9218, i32 257, i32 -256, i32 0, i32 513, i32 -512, i32 -50943, i32 -59392, i32 -30975, i32 -76800, i32 49920, i32 53761, i32 52737, i32 52481, i32 20225, i32 51713, i32 51969, i32 52993, i32 24832, i32 54017, i32 53505, i32 41728, i32 54529, i32 33280, i32 54785, i32 55809, i32 55553, i32 56065, i32 14336, i32 3, i32 -20224, i32 -24831, i32 -14335, i32 2369538, i32 0, i32 257, i32 -256, i32 -52480, i32 -55808, i32 -33279, i32 2763521, i32 -41727, i32 2762753, i32 2768640, i32 -49919, i32 17665, i32 18177, i32 2760448, i32 2759680, i32 2760192, i32 -53760, i32 -52736, i32 -51712, i32 -51968, i32 10833664, i32 10832640, i32 -52992, i32 10823680, i32 10830848, i32 -53504, i32 -54016, i32 2750208, i32 10830080, i32 2751744, i32 -54528, i32 -54784, i32 2746112, i32 10830592, i32 10824192, i32 -17664, i32 -55552, i32 -18176, i32 -56064, i32 10818816, i32 10818048, i32 4989954, i32 0, i32 8193, i32 -8192, i32 257, i32 -256, i32 21504, i32 29697, i32 9729, i32 9473, i32 16385, i32 16129, i32 -9728, i32 -9472, i32 -7936, i32 -16384, i32 -16128, i32 2049, i32 -15872, i32 -14592, i32 -12032, i32 -13824, i32 -2048, i32 -22016, i32 -20480, i32 1792, i32 -29696, i32 -15359, i32 -24576, i32 -1791, i32 7346690, i32 257, i32 -256, i32 8193, i32 -8192, i32 20481, i32 3841, i32 -3840, i32 0, i32 12289, i32 -12288, i32 257, i32 -256, i32 0, i32 770048, i32 1859585, i32 0, i32 9949185, i32 2049, i32 -2048, i32 9045250, i32 0, i32 -770047, i32 -1597952, i32 9028096, i32 -1582336, i32 -1601024, i32 -1600768, i32 -1598464, i32 -1598208, i32 -1596416, i32 0, i32 9058304, i32 9044992, i32 976384, i32 257, i32 -256, i32 0, i32 -15104, i32 -1949439, i32 9379074, i32 2048, i32 -2047, i32 0, i32 22016, i32 -22015, i32 18944, i32 25600, i32 32768, i32 28672, i32 32256, i32 2304, i32 -18943, i32 -2303, i32 -1844480, i32 -25599, i32 -28671, i32 -32767, i32 -32255, i32 11273474, i32 0, i32 4097, i32 -4096, i32 7169, i32 257, i32 -1924351, i32 -2146047, i32 -2115071, i32 -7168, i32 11602690, i32 257, i32 -256, i32 12289, i32 -12288, i32 0, i32 -2750207, i32 -976383, i32 -2746111, i32 -2763520, i32 -2762752, i32 -2759679, i32 -2751743, i32 -2760447, i32 -2760191, i32 -2768639, i32 0, i32 -1859584, i32 0, i32 257, i32 -256, i32 12323842, i32 0, i32 257, i32 -256, i32 -10830847, i32 237569, i32 -9044991, i32 -10823679, i32 12288, i32 -10833663, i32 -10832639, i32 -10830079, i32 -10818047, i32 -10824191, i32 -10818815, i32 -12287, i32 -10830591, i32 -9058303, i32 0, i32 -9949184, i32 -237568, i32 0, i32 8193, i32 -8192, i32 0, i32 10241, i32 -10240, i32 0, i32 16385, i32 -16384, i32 0, i32 8193, i32 -8192, i32 0, i32 8193, i32 -8192, i32 0, i32 8705, i32 -8704], align 16
@exceptions = internal unnamed_addr constant [200 x [2 x i8]] [[2 x i8] c"0\0C", [2 x i8] c"1\0D", [2 x i8] c"x\0E", [2 x i8] c"\7F\0F", [2 x i8] c"\80\10", [2 x i8] c"\81\11", [2 x i8] c"\86\12", [2 x i8] c"\89\13", [2 x i8] c"\8A\13", [2 x i8] c"\8E\14", [2 x i8] c"\8F\15", [2 x i8] c"\90\16", [2 x i8] c"\93\13", [2 x i8] c"\94\17", [2 x i8] c"\95\18", [2 x i8] c"\96\19", [2 x i8] c"\97\1A", [2 x i8] c"\9A\1B", [2 x i8] c"\9C\19", [2 x i8] c"\9D\1C", [2 x i8] c"\9E\1D", [2 x i8] c"\9F\1E", [2 x i8] c"\A6\1F", [2 x i8] c"\A9\1F", [2 x i8] c"\AE\1F", [2 x i8] c"\B1 ", [2 x i8] c"\B2 ", [2 x i8] c"\B7!", [2 x i8] c"\BF\22", [2 x i8] c"\C5#", [2 x i8] c"\C8#", [2 x i8] c"\CB#", [2 x i8] c"\DD$", [2 x i8] c"\F2#", [2 x i8] c"\F6%", [2 x i8] c"\F7&", [2 x i8] c" -", [2 x i8] c":.", [2 x i8] c"=/", [2 x i8] c">0", [2 x i8] c"?1", [2 x i8] c"@1", [2 x i8] c"C2", [2 x i8] c"D3", [2 x i8] c"E4", [2 x i8] c"P5", [2 x i8] c"Q6", [2 x i8] c"R7", [2 x i8] c"S8", [2 x i8] c"T9", [2 x i8] c"Y:", [2 x i8] c"[;", [2 x i8] c"\\<", [2 x i8] c"a=", [2 x i8] c"c>", [2 x i8] c"e?", [2 x i8] c"f@", [2 x i8] c"hA", [2 x i8] c"iB", [2 x i8] c"j@", [2 x i8] c"kC", [2 x i8] c"lD", [2 x i8] c"oB", [2 x i8] c"qE", [2 x i8] c"rF", [2 x i8] c"uG", [2 x i8] c"}H", [2 x i8] c"\82I", [2 x i8] c"\87J", [2 x i8] c"\89K", [2 x i8] c"\8AL", [2 x i8] c"\8BL", [2 x i8] c"\8CM", [2 x i8] c"\92N", [2 x i8] c"\9DO", [2 x i8] c"\9EP", [2 x i8] c"EW", [2 x i8] c"{\1D", [2 x i8] c"|\1D", [2 x i8] c"}\1D", [2 x i8] c"\7FX", [2 x i8] c"\86Y", [2 x i8] c"\88Z", [2 x i8] c"\89Z", [2 x i8] c"\8AZ", [2 x i8] c"\8C[", [2 x i8] c"\8E\\", [2 x i8] c"\8F\\", [2 x i8] c"\AC]", [2 x i8] c"\AD^", [2 x i8] c"\AE^", [2 x i8] c"\AF^", [2 x i8] c"\C2_", [2 x i8] c"\CC`", [2 x i8] c"\CDa", [2 x i8] c"\CEa", [2 x i8] c"\CFb", [2 x i8] c"\D0c", [2 x i8] c"\D1d", [2 x i8] c"\D5e", [2 x i8] c"\D6f", [2 x i8] c"\D7g", [2 x i8] c"\F0h", [2 x i8] c"\F1i", [2 x i8] c"\F2j", [2 x i8] c"\F3k", [2 x i8] c"\F4l", [2 x i8] c"\F5m", [2 x i8] c"\F9n", [2 x i8] c"\FD-", [2 x i8] c"\FE-", [2 x i8] c"\FF-", [2 x i8] c"Pi", [2 x i8] c"Qi", [2 x i8] c"Ri", [2 x i8] c"Si", [2 x i8] c"Ti", [2 x i8] c"Ui", [2 x i8] c"Vi", [2 x i8] c"Wi", [2 x i8] c"Xi", [2 x i8] c"Yi", [2 x i8] c"Zi", [2 x i8] c"[i", [2 x i8] c"\\i", [2 x i8] c"]i", [2 x i8] c"^i", [2 x i8] c"_i", [2 x i8] c"\82\00", [2 x i8] c"\83\00", [2 x i8] c"\84\00", [2 x i8] c"\85\00", [2 x i8] c"\86\00", [2 x i8] c"\87\00", [2 x i8] c"\88\00", [2 x i8] c"\89\00", [2 x i8] c"\C0u", [2 x i8] c"\CFv", [2 x i8] c"\80\89", [2 x i8] c"\81\8A", [2 x i8] c"\82\8B", [2 x i8] c"\85\8C", [2 x i8] c"\86\8D", [2 x i8] c"p\9D", [2 x i8] c"q\9D", [2 x i8] c"v\9E", [2 x i8] c"w\9E", [2 x i8] c"x\9F", [2 x i8] c"y\9F", [2 x i8] c"z\A0", [2 x i8] c"{\A0", [2 x i8] c"|\A1", [2 x i8] c"}\A1", [2 x i8] c"\B3\A2", [2 x i8] c"\BA\A3", [2 x i8] c"\BB\A3", [2 x i8] c"\BC\A4", [2 x i8] c"\BE\A5", [2 x i8] c"\C3\A2", [2 x i8] c"\CC\A4", [2 x i8] c"\DA\A6", [2 x i8] c"\DB\A6", [2 x i8] c"\E5j", [2 x i8] c"\EA\A7", [2 x i8] c"\EB\A7", [2 x i8] c"\ECn", [2 x i8] c"\F3\A2", [2 x i8] c"\F8\A8", [2 x i8] c"\F9\A8", [2 x i8] c"\FA\A9", [2 x i8] c"\FB\A9", [2 x i8] c"\FC\A4", [2 x i8] c"&\B0", [2 x i8] c"*\B1", [2 x i8] c"+\B2", [2 x i8] c"N\B3", [2 x i8] c"\84\08", [2 x i8] c"b\BA", [2 x i8] c"c\BB", [2 x i8] c"d\BC", [2 x i8] c"e\BD", [2 x i8] c"f\BE", [2 x i8] c"m\BF", [2 x i8] c"n\C0", [2 x i8] c"o\C1", [2 x i8] c"p\C2", [2 x i8] c"~\C3", [2 x i8] c"\7F\C3", [2 x i8] c"}\CF", [2 x i8] c"\8D\D0", [2 x i8] c"\94\D1", [2 x i8] c"\AB\D2", [2 x i8] c"\AC\D3", [2 x i8] c"\AD\D4", [2 x i8] c"\B0\D5", [2 x i8] c"\B1\D6", [2 x i8] c"\B2\D7", [2 x i8] c"\C4\D8", [2 x i8] c"\C5\D9", [2 x i8] c"\C6\DA"], align 16
@tab = internal unnamed_addr constant <{ [2603 x i8], [63 x i8] }> <{ [2603 x i8] cy1P1P18P1P1P1P1P1P1P1PN1\02N\0D\0DN\03N\00$n\00N1&nQN$PN9\14\81\1B\1D\1DS1P1P\0D1P1P1P\1BS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\0A\01+(\06\06\00*\06**+\07\BB\B5+\1E\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\CDF\CD+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\B2\D1\B2\D1\B2\D1\B2\D1\00\00\CD\CC\01\00\D7\D7\D7\D7\D7\83\81\81\81\81\81\81\81\81\81\81\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\1C\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\A6\87\A6\87\A6\87\A6\87\A6\87\A6\87\A6\87\A6*++++++++++++\00\00\00TVVVVVVVVVVVV\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00TVVVVVVVVVVVV\0C\00\0C*+++++++++++++\07*\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0Cl\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9E&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7FVV9++UVV++OVV,+\7FVV\817u[{\\++OVV\02\AC\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\C9\D7~-\81\81\0E~9\7FoW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\BB*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\C9\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\AC\D0\0D\00N1\02\B4\C1\C1\D7\D7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\D7\D7S\C1G\D4\D7\D7\D7\05++++++++++++\07\01\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00N1P1P1P1P1P1P1P\0D\00\00\00\00\00$P1P1P1P1P\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\'\\{\\{\\{\A4\00\0A\B4\\{\\{x i8] zeroinitializer }>, align 16
@rulebases = internal unnamed_addr constant <{ [490 x i8], [22 x i8] }> <{ [490 x i8] c"\00\06'Qow\00\00\00\00\00\00\00\00\00\00|x i8] zeroinitializer }>, align 16

@towupper_l = weak alias i32 (i32, %struct.__locale_struct*), i32 (i32, %struct.__locale_struct*)* @__towupper_l
@towlower_l = weak alias i32 (i32, %struct.__locale_struct*), i32 (i32, %struct.__locale_struct*)* @__towlower_l

; Function Attrs: nofree norecurse nosync nounwind optsize readnone strictfp
define i32 @towlower(i32 noundef %0) local_unnamed_addr #0 {
  %2 = tail call fastcc i32 @casemap(i32 noundef %0, i32 noundef 0) #1
  ret i32 %2
}

; Function Attrs: nofree norecurse nosync nounwind optsize readnone strictfp
define internal fastcc i32 @casemap(i32 noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = icmp ugt i32 %0, 131071
  br i1 %3, label %81, label %4

4:                                                ; preds = %2
  %5 = lshr i32 %0, 8
  %6 = and i32 %0, 255
  %7 = trunc i32 %0 to i8
  %8 = udiv i8 %7, 3
  %9 = zext i8 %8 to i64
  %10 = urem i8 %7, 3
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds [2666 x i8], [2666 x i8]* bitcast (<{ [2603 x i8], [63 x i8] }>* @tab to [2666 x i8]*), i64 0, i64 %11
  %13 = load i8, i8* %12, align 1, !tbaa !3
  %14 = zext i8 %13 to i64
  %15 = mul nuw nsw i64 %14, 86
  %16 = add nuw nsw i64 %15, %9
  %17 = getelementptr inbounds [2666 x i8], [2666 x i8]* bitcast (<{ [2603 x i8], [63 x i8] }>* @tab to [2666 x i8]*), i64 0, i64 %16
  %18 = load i8, i8* %17, align 1, !tbaa !3
  %19 = zext i8 %18 to i32
  %20 = zext i8 %10 to i64
  %21 = getelementptr inbounds [3 x i32], [3 x i32]* @casemap.mt, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4, !tbaa !6
  %23 = mul i32 %22, %19
  %24 = lshr i32 %23, 11
  %25 = urem i32 %24, 6
  %26 = getelementptr inbounds [512 x i8], [512 x i8]* bitcast (<{ [490 x i8], [22 x i8] }>* @rulebases to [512 x i8]*), i64 0, i64 %11
  %27 = load i8, i8* %26, align 1, !tbaa !3
  %28 = zext i8 %27 to i32
  %29 = add nuw nsw i32 %25, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [240 x i32], [240 x i32]* @rules, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4, !tbaa !6
  %33 = and i32 %32, 255
  %34 = ashr i32 %32, 8
  %35 = icmp ult i32 %33, 2
  br i1 %35, label %36, label %41

36:                                               ; preds = %4
  %37 = xor i32 %33, %1
  %38 = sub i32 0, %37
  %39 = and i32 %34, %38
  %40 = add i32 %39, %0
  br label %81

41:                                               ; preds = %4
  %42 = and i32 %34, 255
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %81, label %44

44:                                               ; preds = %41
  %45 = lshr i32 %34, 8
  br label %46

46:                                               ; preds = %44, %75
  %47 = phi i32 [ %79, %75 ], [ %42, %44 ]
  %48 = phi i32 [ %78, %75 ], [ %45, %44 ]
  %49 = lshr i32 %47, 1
  %50 = add i32 %49, %48
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [200 x [2 x i8]], [200 x [2 x i8]]* @exceptions, i64 0, i64 %51, i64 0
  %53 = load i8, i8* %52, align 2, !tbaa !3
  %54 = zext i8 %53 to i32
  %55 = icmp eq i32 %6, %54
  br i1 %55, label %56, label %75

56:                                               ; preds = %46
  %57 = zext i32 %50 to i64
  %58 = getelementptr inbounds [200 x [2 x i8]], [200 x [2 x i8]]* @exceptions, i64 0, i64 %57, i64 1
  %59 = load i8, i8* %58, align 1, !tbaa !3
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [240 x i32], [240 x i32]* @rules, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4, !tbaa !6
  %63 = and i32 %62, 255
  %64 = icmp ult i32 %63, 2
  br i1 %64, label %65, label %71

65:                                               ; preds = %56
  %66 = ashr i32 %62, 8
  %67 = xor i32 %63, %1
  %68 = sub i32 0, %67
  %69 = and i32 %66, %68
  %70 = add i32 %69, %0
  br label %81

71:                                               ; preds = %56
  %72 = icmp eq i32 %1, 0
  %73 = select i1 %72, i32 1, i32 -1
  %74 = add nsw i32 %73, %0
  br label %81

75:                                               ; preds = %46
  %76 = icmp ult i32 %6, %54
  %77 = sub i32 %47, %49
  %78 = select i1 %76, i32 %48, i32 %50
  %79 = select i1 %76, i32 %49, i32 %77
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %46

81:                                               ; preds = %75, %41, %71, %65, %2, %36
  %82 = phi i32 [ %40, %36 ], [ %0, %2 ], [ %74, %71 ], [ %70, %65 ], [ %0, %41 ], [ %0, %75 ]
  ret i32 %82
}

; Function Attrs: nofree norecurse nosync nounwind optsize readnone strictfp
define i32 @towupper(i32 noundef %0) local_unnamed_addr #0 {
  %2 = tail call fastcc i32 @casemap(i32 noundef %0, i32 noundef 1) #1
  ret i32 %2
}

; Function Attrs: nofree norecurse nosync nounwind optsize readnone strictfp
define i32 @__towupper_l(i32 noundef %0, %struct.__locale_struct* nocapture readnone %1) #0 {
  %3 = tail call fastcc i32 @casemap(i32 noundef %0, i32 noundef 1) #2
  ret i32 %3
}

; Function Attrs: nofree norecurse nosync nounwind optsize readnone strictfp
define i32 @__towlower_l(i32 noundef %0, %struct.__locale_struct* nocapture readnone %1) #0 {
  %3 = tail call fastcc i32 @casemap(i32 noundef %0, i32 noundef 0) #2
  ret i32 %3
}

attributes #0 = { nofree norecurse nosync nounwind optsize readnone strictfp "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "strictfp" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nobuiltin optsize strictfp "no-builtins" }
attributes #2 = { nobuiltin nounwind optsize strictfp "no-builtins" }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"Ubuntu clang version 14.0.6"}
!3 = !{!4, !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !4, i64 0}
